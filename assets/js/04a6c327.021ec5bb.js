"use strict";(self.webpackChunkmy_owm_docs=self.webpackChunkmy_owm_docs||[]).push([[7897],{602:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=e(4848),r=e(8453);const o={title:"TinkerKit LCD - Tutorials",sidebar_position:1,slug:"tinkerkit-lcd-tutorials"},l="TinkerKit Arduino LCD - Tutorials",a={id:"tutorials/tinkerkit/tinkerkit-lcd-0",title:"TinkerKit LCD - Tutorials",description:"With the TinkerKit LCD module, you can write text on the module's screen in a few minutes. The LCD can be used like a regular module by plugging it into the TinkerKit! shield or as an independent component; it has in fact an ATmega 32U4 microcontroller and a USB port on board that make it a fully-fledged LCD-shaped Arduino Leonardo.",source:"@site/docs/tutorials/tinkerkit/tinkerkit-lcd-0.md",sourceDirName:"tutorials/tinkerkit",slug:"/tutorials/tinkerkit/tinkerkit-lcd-tutorials",permalink:"/docs/tutorials/tinkerkit/tinkerkit-lcd-tutorials",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/tinkerkit/tinkerkit-lcd-0.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"TinkerKit LCD - Tutorials",sidebar_position:1,slug:"tinkerkit-lcd-tutorials"},sidebar:"tutorialSidebar",previous:{title:"Robot with Real-Time Temperature Display",permalink:"/docs/tutorials/robot-with-real-time-temperature-display"},next:{title:"Windows Installation Guide",permalink:"/docs/tutorials/tinkerkit/tinkerkit-lcd-tutorial-01-windows-installation-guide"}},s={},d=[];function u(t){const i={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"tinkerkit-arduino-lcd---tutorials",children:"TinkerKit Arduino LCD - Tutorials"}),"\n",(0,n.jsxs)(i.p,{children:["With the ",(0,n.jsx)(i.a,{href:"https://www.canadarobotix.com/products/1654",children:"TinkerKit LCD module"}),", you can write text on the module's screen in a few minutes. The LCD can be used like a regular module by plugging it into the TinkerKit! shield or as an independent component; it has in fact an ATmega 32U4 microcontroller and a USB port on board that make it a fully-fledged LCD-shaped Arduino Leonardo."]}),"\n",(0,n.jsx)("img",{src:"https://cdn.shopify.com/s/files/1/0015/7571/4865/products/1654_20_1_1024x1024@2x.jpg",alt:"tinkerkit-lcd",width:"300"}),"\n",(0,n.jsx)("img",{src:"https://cdn.shopify.com/s/files/1/0015/7571/4865/products/1654_20_3_1024x1024@2x.jpg",alt:"tinkerkit-lcd",width:"300"}),"\n",(0,n.jsx)(i.p,{children:"In here, you'll find 6 tutorials (an archive of the original TinkerKit tutorials) to help you get started:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-01-windows-installation-guide",children:"Tutorial 01 - Windows Installation Guide"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-02-introduction-to-lcd",children:"Tutorial 02 - Introduction to LCD"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-03-lcd-serial",children:"Tutorial 03 - LCD Serial"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-04-lcd-local-no-arduino",children:"Tutorial 04 - LCD Local (No Arduino)"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-05-arduino-2-wires",children:"Tutorial 05 - Arduino & 2 Wires"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"tinkerkit-lcd-tutorial-06-arduino-2-wires",children:"Tutorial 06 - TWI"})}),"\n"]})]})}function c(t={}){const{wrapper:i}={...(0,r.R)(),...t.components};return i?(0,n.jsx)(i,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}},8453:(t,i,e)=>{e.d(i,{R:()=>l,x:()=>a});var n=e(6540);const r={},o=n.createContext(r);function l(t){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function a(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:l(t.components),n.createElement(o.Provider,{value:i},t.children)}}}]);